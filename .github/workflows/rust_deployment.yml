name: Build and Deploy Rust App

on:
  push:
    branches:
      - main  # Change this to your default branch if different

jobs:
  build:
    name: Build Rust App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Adjust based on your needs

      - name: Install SQLx CLI
        run: cargo install sqlx-cli --features sqlite

      - name: Set Up Environment Variables
        run: echo "DATABASE_URL=sqlite://data.db" >> $GITHUB_ENV

      - name: Apply Database Migrations
        run: |
          sqlx database create
          sqlx migrate run

      - name: Build TailwindCSS Assets
        working-directory: ./tailwind
        run: |
          npm install
          npm run build-css-prod

      - name: Build Rust App
        run: cargo build --release

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io  # Docker Hub registry
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: umarhayat13/rust-axum-askama-htmx:latest

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig
        run: |
          doctl kubernetes cluster kubeconfig save ${{ secrets.DIGITALOCEAN_CLUSTER_NAME }}
      
      - name: Deploy to DigitalOcean Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl rollout status deployment/rust-axum-app

      - name: Verify Deployment
        run: |
          kubectl get services rust-axum-app-service
          echo "Deployment completed successfully!"